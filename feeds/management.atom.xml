<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Code Arcana - management</title><link href="https://codearcana.com/" rel="alternate"></link><link href="https://codearcana.com/feeds/management.atom.xml" rel="self"></link><id>https://codearcana.com/</id><updated>2020-11-06T00:00:00-08:00</updated><entry><title>Giving feedback thats easy to listen to</title><link href="https://codearcana.com/posts/2020/11/06/giving-feedback-thats-easy-to-listen-to.html" rel="alternate"></link><published>2020-11-06T00:00:00-08:00</published><updated>2020-11-06T00:00:00-08:00</updated><author><name>Alex Reece</name></author><id>tag:codearcana.com,2020-11-06:/posts/2020/11/06/giving-feedback-thats-easy-to-listen-to.html</id><summary type="html">&lt;p&gt;The whole point of feedback is to change someone’s behavior in the future. That only works if you can give it in a form that they can listen to. This is a template I got from the wonderful Manager Tools on how to give feedback in a way that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The whole point of feedback is to change someone’s behavior in the future. That only works if you can give it in a form that they can listen to. This is a template I got from the wonderful Manager Tools on how to give feedback in a way that maximizes the chance that your feedback will be heard.&lt;/p&gt;
&lt;h2&gt;Use the "When you {verb}ed ... what happened was ..." model&lt;/h2&gt;
&lt;h3&gt;"When you"&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Identify the externally visible past behavior, not mindset or intent.&lt;/li&gt;
&lt;li&gt;You should be so descriptive (or so recent to the event) that they can identify a specific instance of them exhibiting the behavior&lt;/li&gt;
&lt;li&gt;Deliberately force yourself to give feedback about only specific instances and not patterns – it will force you to give feedback that is easier to listen to.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;"What happened was"&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Identify impact in the context of the event&lt;/li&gt;
&lt;li&gt;Great feedback uses impact that resonates with the listener, e.g. "the project delivered late" vs "Tim was sad" are valued differently by different people on the team.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Examples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;"&lt;em&gt;&lt;strong&gt;When you&lt;/strong&gt;&lt;/em&gt; added an emoji to my slack message, &lt;em&gt;&lt;strong&gt;what happened was&lt;/strong&gt;&lt;/em&gt; I felt I was part of a team"&lt;/li&gt;
&lt;li&gt;"&lt;em&gt;&lt;strong&gt;When you&lt;/strong&gt;&lt;/em&gt; interrupted me when I was talking about API design in the team meeting, &lt;em&gt;&lt;strong&gt;what happened was&lt;/strong&gt;&lt;/em&gt; I stopped offering my perspective during the discussion"&lt;/li&gt;
&lt;li&gt;"&lt;em&gt;&lt;strong&gt;When you&lt;/strong&gt;&lt;/em&gt; provided an alternative doc comment in my code review, &lt;em&gt;&lt;strong&gt;what happened was&lt;/strong&gt;&lt;/em&gt; it was easy for me to incorporate the change"&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Subtle failure modes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;"You come off as mean; for example, you interrupted me"&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Providing feedback of the form "pattern example" is especially dangerous, since it can create a story that is hard to recover from. (If the person stops interrupting, are they still mean?).&lt;/li&gt;
&lt;li&gt;Instead, prefer the form "instance consequence", so it is more clear that changing the behavior will change the effect: &lt;em&gt;"When you interrupted me, you came off as an asshole"&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;"When you started speaking while I was speaking, what happened was I felt insulted"&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Impact on your emotions is ok, but some words can accidentally ascribe intent (did the person intend to insult you?).&lt;/li&gt;
&lt;li&gt;Instead, prefer words that describe your emotional state (for examples, check out &lt;a href="https://www.cnvc.org/training/resource/feelings-inventory"&gt;this list&lt;/a&gt;): &lt;em&gt;"When you started speaking while I was speaking, what happened was I felt angry"&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;"When you interrupt me, what happens is I stop speaking"&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Giving feedback in present tense usually is about a pattern and is generally less credible; its easy for someone to say "I didn't do that" or "I stopped doing that" or "you only notice bad things", etc.&lt;/li&gt;
&lt;li&gt;Instead, use past tense and prefer feedback about specific examples: &lt;em&gt;"When you interrupted me in the team meeting, what happened is I stopped speaking"&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Get the right context&lt;/h2&gt;
&lt;p&gt;Manager Tools warns (rightly) that it is very dangerous to give feedback when
you can't be sure the other person knows its coming from a place of love:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wait until you have a strong relationship to give feedback.&lt;/li&gt;
&lt;li&gt;Avoid doing it when angry.&lt;/li&gt;
&lt;li&gt;Aim to do it with a laugh and a wry smile on your face.&lt;/li&gt;
&lt;li&gt;Avoid doing it in writing, where people have to infer emotions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Further reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.manager-tools.com/"&gt;Manager Tools&lt;/a&gt; is chock-full of great advice
  on feedback (and other management duties). I highly recommend starting from
  &lt;a href="https://www.manager-tools.com/manager-tools-basics"&gt;the basics&lt;/a&gt; and checking out podcasts like
  &lt;a href="https://www.manager-tools.com/2005/07/giving-effective-feedback"&gt;The Feedback Model&lt;/a&gt; or
  &lt;a href="https://www.manager-tools.com/2006/02/improve-your-feedback"&gt;Improve your feedback with DISC&lt;/a&gt; or
  &lt;a href="https://www.manager-tools.com/2019/09/event-based-peer-feedback-part-1"&gt;Event Based Peer Feedback&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Nonviolent-Communication-Language-Marshall-Rosenberg/dp/1892005034"&gt;Nonviolent Communication: A Language of Life&lt;/a&gt;, by Marshall B. Rosenberg is a fantastic overview of communicating effectively about emotions.&lt;/li&gt;
&lt;/ul&gt;</content><category term="management"></category><category term="communication"></category></entry><entry><title>Coaching conversations: leadership micro-vacuums</title><link href="https://codearcana.com/posts/2020/05/29/coaching-conversations-leadership-micro-vacuums.html" rel="alternate"></link><published>2020-05-29T00:00:00-07:00</published><updated>2020-05-29T00:00:00-07:00</updated><author><name>Alex Reece</name></author><id>tag:codearcana.com,2020-05-29:/posts/2020/05/29/coaching-conversations-leadership-micro-vacuums.html</id><summary type="html">&lt;p&gt;I have tried a script like this for the past year for engineers at around the Senior engineer level. I have been really happy with the results so far: the idea of "leadership mini-vacuums" makes growth here fairly approachable. The steps are small and people can choose to start with the step with which they are most comfortable.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have tried a script like this for the past year for engineers at around the Senior engineer level. I have been really happy with the results so far: the idea of "leadership mini-vacuums" makes growth here fairly approachable. The steps are small and people can choose to start with the step with which they are most comfortable.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;EM&lt;/strong&gt;: "Think about the best run project you've ever seen. What was the name of that project?"&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IC&lt;/strong&gt;: &lt;em&gt;"Probably it would be the Foo project."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EM&lt;/strong&gt;: "And what about the Foo project did you really like?"&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IC&lt;/strong&gt;: &lt;em&gt;"Everything about it. There was a clear plan of what to do, the sprint planning meetings were well organized, the project excited senior leadership, and we even presented the project in an all-hands meeting."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EM&lt;/strong&gt;: "All of the things mentioned are the result of someone being a leader on the project in a small way. Every time your project is missing something from the Foo project, there is probably a 'leadership micro-vacuum' that you could volunteer to fill. For example, you could: run the sprint planning meetings, create a project plan with milestones and deliverables, or send out weekly status emails to senior leaders. There are all sorts of little ways you can help, so you can start with just one and pick your favorite."&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IC&lt;/strong&gt;: &lt;em&gt;"I'm worried that I won't do a good job on that, though"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EM&lt;/strong&gt;: "In fairness, you probably will not do as good a job as the Foo project on your first time.       You'll be slow, or make mistakes, or maybe just not be as polished. But if you never accept even a temporary drop in quality, you can never iterate and improve. Since I know that you are trying a new thing, I will be supportive to help you avoid mistakes and forgiving when you make them." &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IC&lt;/strong&gt;: &lt;em&gt;"I still feel weird doing some of those tasks."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EM&lt;/strong&gt;: "Unfortunately, you will have to push through the discomfort the first few times. One thing that helps me is realizing that "the uncomfortable feeling I have when I am doing something new" is the feeling of growing. The other thing that helps me is to do it the first few times with some who has done this before, like the Tech Lead."&lt;/p&gt;</content><category term="management"></category><category term="coaching"></category></entry><entry><title>Apologies</title><link href="https://codearcana.com/posts/2020/05/13/apologies.html" rel="alternate"></link><published>2020-05-13T00:00:00-07:00</published><updated>2020-05-13T00:00:00-07:00</updated><author><name>Alex Reece</name></author><id>tag:codearcana.com,2020-05-13:/posts/2020/05/13/apologies.html</id><summary type="html">&lt;p&gt;Some thoughts on how to give better apologies.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;4 parts of an apology&lt;/h2&gt;
&lt;p&gt;I've been thinking about apologies recently. In both personal and
professional relationships, I've found that the best apologies have the
following 4 parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"What I did I was wrong"&lt;/li&gt;
&lt;li&gt;"I messed up when I ..."&lt;/li&gt;
&lt;li&gt;"I understand how this would cause you to feel ..."&lt;/li&gt;
&lt;li&gt;"In the future, I'm going to ..."&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This format has a few subtle points in it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"I was wrong" is an explicit admission of guilt and forces me to be
   sincere. It makes the apology much more effective.&lt;/li&gt;
&lt;li&gt;It is important to be specific about &lt;em&gt;what&lt;/em&gt; behavior was wrong. This
   specificity allows me to demonstrate that I listened by describing my
   behavior from their perspective. &lt;/li&gt;
&lt;li&gt;It is super powerful to reflect the person's emotion back to them. Again,
   this is an opportunity to demonstrate listening; this &lt;em&gt;also&lt;/em&gt; shows that I
   think their reaction was valid.&lt;/li&gt;
&lt;li&gt;Providing a short description of my corrective actions shows
   that I am taking responsibility for my behavior by providing an
   &lt;em&gt;unconditional&lt;/em&gt; commitment to change.&lt;/li&gt;
&lt;li&gt;It is relatively short, which makes it easy to remember and harder to drag
   out a potentially emotional process.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Some sample apologies&lt;/h2&gt;
&lt;p&gt;Put all together, an apology might sound like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"I'm sorry, I was wrong to shout at you in that fight. I understand how
   that made your feel scared. In the future, I'm going to take a few deep
   breaths to calm down."&lt;/li&gt;
&lt;li&gt;"I'm sorry about that meeting. I was wrong to report your status as red in
   front of your boss without discussing you first; I bet it made you feel
   frustrated. In the future, I'll make sure to sync up with you about the
   status beforehand."&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to screw up an apology&lt;/h2&gt;
&lt;p&gt;But there are a lot of ways I used to accidentally screw up apologies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;I explained 'why' I acted that way.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Saying "the reason why", "What I was thinking", "my intent was", or "because"
   is the fastest way to ruin the apology by making it about me, not them.
   Worse, it can make it seem like I am attempting to absolve myself of
   my mistake. 
   Instead, I find its better to say "It doesn't matter why I did that, I
   know it still made you feel ..."&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;I mentioned the other's behavior in my apology.&lt;/em&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Saying "I was wrong
   to raise my voice when you ..." is too close to offering an excuse (see the
   previous point).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;I waited for them to be ready to apologize&lt;/em&gt;. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I let a few important
   relationships sour because I was "right" and was waiting for the other
   person to apologize first.
   Instead, I try to apologize as soon as I am ready for &lt;em&gt;my part&lt;/em&gt;: the actions
   that I genuinely acknowledge were hurtful, ineffective, etc. Here, being
   specific about my behavior during the apology helps me be genuine. For
   example, "I was wrong to raise my voice".&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;I apologized for their reaction, not my behavior&lt;/em&gt;. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"I was wrong to make you
   upset" or "I'm sorry that you got upset" are both missing the description
   of &lt;em&gt;my actions&lt;/em&gt; that provoked that reaction. Instead, I try to explicitly
   refer
   to my behavior: "I was wrong to shout" or "I was wrong to use a high
   pitched tone of voice."&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;I qualifed the apology&lt;/em&gt;. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Saying "I'm sorry if ..." or "in the future, I
   will ... if ..." similarly indicates only conditional acceptance of responsibility.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;I apologized in writing.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is a conversation where emotions
   matter; I now do it in the most personal channel I have available (in
   person &amp;gt; video call &amp;gt; phone call).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are some of my favorite apology resources, that were inspirational for
this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;Randy Pausch's The Last Lecture Ch. 47 A Bad Apology Is Worse Than No Apology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manager-tools.com/2006/10/do-you-need-to-apologize"&gt;Manager Tool's How to Apologize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://baynvc.org/basics-of-nonviolent-communication/"&gt;Marshall Rosenberg's Non Violent Communication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="management"></category><category term="communication"></category></entry><entry><title>A review of Measuring and Managing Performance in Organizations</title><link href="https://codearcana.com/posts/2018/09/07/a-review-of-measuring-and-managing-performance-in-organizations.html" rel="alternate"></link><published>2018-09-07T00:00:00-07:00</published><updated>2018-09-07T00:00:00-07:00</updated><author><name>Alex Reece</name></author><id>tag:codearcana.com,2018-09-07:/posts/2018/09/07/a-review-of-measuring-and-managing-performance-in-organizations.html</id><summary type="html">&lt;p&gt;The central thesis of this book is that measuring employees will necessarily incentivize their behavior and measurement systems are doomed to by dysfunctional if any critical dimension of an employees role is not measured.&lt;/p&gt;</summary><content type="html">&lt;p&gt;On the advice of another Boy Scout leader, I read &lt;a href="https://smile.amazon.com/dp/B00DY3KQX6"&gt;&lt;em&gt;Measuring and Managing Performance in Organizations&lt;/em&gt;&lt;/a&gt; by Robert Austin. &lt;/p&gt;
&lt;h2&gt;An overview&lt;/h2&gt;
&lt;p&gt;This book is basically an extended doctoral thesis, written in 1996. It
discusses how employees are motivated by measurement, in particular focussing
on incentives that lead to disfunctional behavior.&lt;/p&gt;
&lt;p&gt;The book is dense and a bit self-indulgent&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;, but has a few fascinating points.&lt;/p&gt;
&lt;h2&gt;My Takeaways (tl;dr)&lt;/h2&gt;
&lt;p&gt;I think the key takeways of the book are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Measuring employee performance will necessarily incentivize behavior.&lt;/li&gt;
&lt;li&gt;Incentives will necessarily be disfunctional if any important
   dimension is not measured.&lt;/li&gt;
&lt;li&gt;Employees internal desire to do good work will cause them to natually choose
   an ideal allocation of labor, assuming they have perfect knowledge of what
   the customer wants.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think this last assumption is critical -- most organizations try to silo
knowledge about the customer in a product management role. I think this
assumption is a key reason why &lt;em&gt;all&lt;/em&gt; employees (e.g. engineers) should be
expected to understand customer goals and information should be actively spread
to them; in my opinion, the role of product should be to disseminate information
so that all engineers can make good allocations.&lt;/p&gt;
&lt;h2&gt;Walk through of book&lt;/h2&gt;
&lt;h3&gt;Types of measurements&lt;/h3&gt;
&lt;p&gt;Austin first points out that there are two different types of measurements,
&lt;em&gt;motivational&lt;/em&gt; and &lt;em&gt;informational&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Motivational measurement is, by definition, intended to cause reactions in the people being measured, while informational measurement should be careful not to change the actions of the people being measured.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This distinction is only useful when talking about the intent of measurement;
he very quickly points out that if human beings are aware of the fact that they
are being measured, they will invariably change the motivations based on the
numbers. That is to say, there is no such thing as informational measures for
humans.&lt;/p&gt;
&lt;p&gt;Worse, this leads to the compromise of the measures:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The more any quantitative social indicator is used for social decision-making, the more subject it will be to corruption pressures and the more apt it will be to distort and corrupt the social processes it is intended to monitor&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;A model for employee motivation&lt;/h3&gt;
&lt;p&gt;Austin lays out a model for motivation with 3 parties, a customer, a principal
(or boss), and an agent (or employee). The agent has two types of tasks to work
on (e.g. cooking and cleaning or quantity and quality, etc) and must allocate 
time between them. The customer has a preference for the ratio of allocations 
between the two tasks (e.g. 40% cooking and 60% cleaning). The boss is
trying to figure out how to motivate the employee to do more work; 
the motivation system is considered to be &lt;em&gt;dysfunctional&lt;/em&gt; if the 
agent does not follow the customers preferred ratio.&lt;/p&gt;
&lt;p&gt;This model is a great framework for making key observations:
 - If the boss only incentivizes one of the two tasks, the employee will 
   natually do primarily that task and little of the other, leading to 
   dysfunction. &lt;em&gt;This is the key reason for dysfunction in organizations&lt;/em&gt;, 
   when not all of the &lt;em&gt;critical tasks&lt;/em&gt; are incentivized. If a motivation
   scheme misses a task important to a customer or if a dimension is hard to 
   measure (e.g. measuring quality), the system is doomed to by dysfunctional.
 - If you assume the employee is motivated by the desire to do a good job
   by pleasing the customer &lt;em&gt;and&lt;/em&gt; knows what the customer wants,
   then they will naturally seek out an allocation of time to tasks that 
   makes the customer happy.&lt;/p&gt;
&lt;h3&gt;Austin's Unsatisfying Conclusion&lt;/h3&gt;
&lt;p&gt;Austin clearly suggests that the best way to motivate employees is via internal
motivation, of doing a good job and supporting a team. He talks about a few
cultures that do this well (e.g. Japanese manufacturing), but doesn't give a
very compelling way to motivate employees to output more work -- increasing
compensation as a function of measured output would do so, but he clearly
indicates that he thinks it is impossible to measure output without
dysfunction. Worse, he thinks that providing external motivation usually ruins
an employee's internal motivation.&lt;/p&gt;
&lt;p&gt;One last interesting quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Customers verbalize only the most direct of three categories of desires when asked (see, for example, Hauser and Clausing, 1988). Customers do not mention needs that they assume will be met by all products of the type in question. And they do not mention product qualities that they have not thought of but would like. They mention only qualities that they do not expect but know that they want.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;Much like this blog post ...&amp;#160;&lt;a class="footnote-backref" href="#fnref-1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="reviews"></category><category term="management"></category></entry><entry><title>5 graceful questions to avoid a toxic engineering team</title><link href="https://codearcana.com/posts/2018/04/17/5-graceful-questions-to-avoid-a-toxic-engineering-team.html" rel="alternate"></link><published>2018-04-17T00:00:00-07:00</published><updated>2018-04-17T00:00:00-07:00</updated><author><name>Alex Reece</name></author><id>tag:codearcana.com,2018-04-17:/posts/2018/04/17/5-graceful-questions-to-avoid-a-toxic-engineering-team.html</id><summary type="html">&lt;p&gt;While interviewing at a potential company, the engineer evaluating you asks the
obligatory "Any questions for me?". What do you ask?&lt;/p&gt;
&lt;p&gt;Some might be tempted to follow a checklist like the
&lt;a href="https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/"&gt;Joel Test&lt;/a&gt;&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;,
but I prefer to ask questions that allow me to be more diplomatic when probing
a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;While interviewing at a potential company, the engineer evaluating you asks the
obligatory "Any questions for me?". What do you ask?&lt;/p&gt;
&lt;p&gt;Some might be tempted to follow a checklist like the
&lt;a href="https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/"&gt;Joel Test&lt;/a&gt;&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;,
but I prefer to ask questions that allow me to be more diplomatic when probing
a company's values:&lt;/p&gt;
&lt;h2&gt;Can you show me a non-trivial code review?&lt;/h2&gt;
&lt;p&gt;In my favorite opening question, I immediately seem innocent and
curious while asking the engineer to show me something they are proud of. 
I maintain this demeanor while asking all future questions -- the interviewer
will be evaluating me on my questions, so I want to sound friendly with no
ulterior motives.&lt;/p&gt;
&lt;p&gt;But this question jumps directly to the heart of the engineering culture:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How are disputes settled, e.g. about code style? Does the "highest paid
   person's opinion" win? Are people friendly or are does the company allow
   &lt;a href="http://www.brendangregg.com/blog/2017-11-13/brilliant-jerks.html"&gt;"brilliant jerks"&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;How are the tests? Are they automated in a CI system? Are flaky tests tracked?
   Does the review add more tests? Was it expected to? &lt;/li&gt;
&lt;li&gt;Does someone maintain the health of the build and test system?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I normally like to ask this question of a junior engineer who is less likely to
override the company culture with their own personality. I do need to be careful
when asking follow up questions because I do not want to come off
as critical.&lt;/p&gt;
&lt;h2&gt;How was your on-boarding?&lt;/h2&gt;
&lt;p&gt;In this question, I want to seem supportive and eager to start. I want to know:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Were you thrown in the fire or was there a training process? Was there good
   documentation and tools?&lt;/li&gt;
&lt;li&gt;How long were you mentored? What was the ongoing relationship between you
   and your manager?&lt;/li&gt;
&lt;li&gt;Are there non-HR trainings available for senior people?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, this question is most effective when you can ask a junior person who 
recently was on-boarded. It is important to not come off as entitled when
asking this question.&lt;/p&gt;
&lt;h2&gt;What is the weirdest bug that you have worked on in the past year?&lt;/h2&gt;
&lt;p&gt;In this question, my goal is to elicit a good war story so I can evaluate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How was it addressed in the short term? In the long term?&lt;/li&gt;
&lt;li&gt;Do people actually debug issues or do they just work around them?&lt;/li&gt;
&lt;li&gt;Do people root-cause non-reproducible issues?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This question is better to ask of a senior person who is likely to have seen
a spectrum of issues and the long-term consequences of fixes to them.&lt;/p&gt;
&lt;h2&gt;Can you talk about the last engineer who got promoted (not to management)?&lt;/h2&gt;
&lt;p&gt;The goal of this question is to understand what qualities the company actually
values.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Were they friendly and helpful when working with other engineers?&lt;/li&gt;
&lt;li&gt;How did they start working on their projects? Is project assignment political?&lt;/li&gt;
&lt;li&gt;Is there a culture of recognizing talented individual contributors?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, I like to ask a senior engineer this question because they are more
likely to have seen the history of the engineer in question. This question does
not work with exceptionally small companies that have not promoted engineers.&lt;/p&gt;
&lt;h2&gt;Can you show me how you track the status of your next release?&lt;/h2&gt;
&lt;p&gt;Here I want to understand the health of the engineering organization.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How do you measure the health of your engineering organization?&lt;/li&gt;
&lt;li&gt;How do you decide what projects to prioritize?&lt;/li&gt;
&lt;li&gt;How does the culture change near the end of the release?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This question is most effective when asked of a senior engineer or even a
manager who would be thinking about release health. Be careful when asking
this question of exceptionally small companies -- they might not have a release
dashboard and you do not want to shame them.&lt;/p&gt;
&lt;h2&gt;Key takeaways&lt;/h2&gt;
&lt;p&gt;Keep a friendly and playful spirit and under no circumstances allow 
the interviewer to feel bad; remember they are evaluating you for culture
fit too!&lt;/p&gt;
&lt;p&gt;The goal is answer important questions about the company culture without being 
offensive. These questions allow you to gracefully probe the values of an
engineering organization.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;I have a preference for this &lt;a href="https://myers.io/2017/04/04/the-joel-test-for-2017/"&gt;updated Joel Test&lt;/a&gt;, but I still don't find it perfect (in particular, I think it assumes the organization is a certain size).&amp;#160;&lt;a class="footnote-backref" href="#fnref-1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="interviewing"></category></entry><entry><title>A review of Winning with Data</title><link href="https://codearcana.com/posts/2018/04/11/a-review-of-winning-with-data.html" rel="alternate"></link><published>2018-04-11T00:00:00-07:00</published><updated>2018-04-11T00:00:00-07:00</updated><author><name>Alex Reece</name></author><id>tag:codearcana.com,2018-04-11:/posts/2018/04/11/a-review-of-winning-with-data.html</id><summary type="html">&lt;p&gt;On the advice of a former colleague, I recently read &lt;a href="https://smile.amazon.com/Winning-Data-Transform-Culture-Empower-ebook/dp/B01G9FLALC"&gt;Winning with Data: Transform Your Culture, Empower Your People, and Shape the Future&lt;/a&gt; by Tomasz Tunguz and Frank Bien.&lt;/p&gt;
&lt;p&gt;This book was a bunch of just-so stories about how companies used a data-driven methodology (via Looker) to improve their business …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On the advice of a former colleague, I recently read &lt;a href="https://smile.amazon.com/Winning-Data-Transform-Culture-Empower-ebook/dp/B01G9FLALC"&gt;Winning with Data: Transform Your Culture, Empower Your People, and Shape the Future&lt;/a&gt; by Tomasz Tunguz and Frank Bien.&lt;/p&gt;
&lt;p&gt;This book was a bunch of just-so stories about how companies used a data-driven methodology (via Looker) to improve their business. It also mixed in some unrelated stuff; e.g. how to do pitches. I found this quite underwhelming, but here were some interesting quotes.&lt;/p&gt;
&lt;h2&gt;Quotes&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Brutal intellectual honesty aims to slay the HIPPO, or the highest-paid person's opinion, as the determining factor of the direction of a project, team, or company. Left unmitigated, this management artifact wreaks disastrous consequences on companies.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is particularly relevant to companies that try to bring a more data driven approach to decision making and might have to counter traditional decision making. I think this was a place where there was a lot of potential for more interesting exploration: how do you convince a team to switch to a data driven culture (e.g. the old school scouts in Moneyball).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“What decisions would that analysis inform?”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When being asked to do some involved/length analysis, make sure the result would have real business impact.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Upworthy's use of attention minutes, rather than the traditional cost per thousand impressions, as a metric for charging advertisers aligns the incentives of readers, journalists, and advertisers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The use of derived measures here reminds me of the use of “risk tolerance” by the google SRE teams https://landing.google.com/sre/book/chapters/embracing-risk.html&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Z score is determined by the desired p-value / confidence interval. Let's choose an 80 percent confidence interval. The Z score is 1.28.&lt;/p&gt;
&lt;p&gt;The standard of deviation is measured on a scale from 0 to 1. Most people use 0.5 since it is the most forgiving value and will generate the largest sample size.&lt;/p&gt;
&lt;p&gt;The margin of error is also called the confidence interval.&lt;/p&gt;
&lt;p&gt;$$ SampleSize = \frac{ZScore^2 * StandardOfDeviation * (1 -
StandardOfDeviation)}{MarginOfError^2} $$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A convenient formula to compute required sample size for a statistically
relevant study.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Their analysis showed 10 slides is the optimal length for fundraising pitches:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Company Purpose&lt;/em&gt;: the mission or goal of the business&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Problem&lt;/em&gt;: the complication with the status quo that creates the opportunity for the business to pursue&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Solution&lt;/em&gt;: the company's proposed idea to resolve the problem&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Why Now&lt;/em&gt;: why should this idea succeed now, when no one has succeeded with it before?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Market Size&lt;/em&gt;: if the business were to succeed, how valuable could it be?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Product&lt;/em&gt;: typically, a demonstration of the product or images of the technology&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Team&lt;/em&gt;: the members of the founding and executive team, often including key advisors and investors&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Business Model&lt;/em&gt;: an overview of the business' pricing strategy and unit economics.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Competition&lt;/em&gt;: a description of the alternatives and substitutes and how the startup intends to differentiate itself&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Financials&lt;/em&gt;: a pro-forma profit and loss projection of the business. In Docsend's analysis, investors spend the most time on this slide to understand the long-term profitability of the business and the amount of capital required to sustain the company.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think this list of 10 slides is likely to be good for nearly any pitch, including for internal presentation.&lt;/p&gt;</content><category term="reviews"></category></entry><entry><title>A review of Drift Into Failure</title><link href="https://codearcana.com/posts/2016/03/02/a-review-of-drift-into-failure.html" rel="alternate"></link><published>2016-03-02T00:00:00-08:00</published><updated>2016-03-02T00:00:00-08:00</updated><author><name>Alex Reece</name></author><id>tag:codearcana.com,2016-03-02:/posts/2016/03/02/a-review-of-drift-into-failure.html</id><summary type="html">&lt;p&gt;On the advice of a former colleague, I recently read &lt;a href="http://smile.amazon.com/Drift-into-Failure-Components-Understanding-ebook/dp/B009KOKXKY"&gt;&lt;em&gt;Drift into Failure: From Hunting Broken Components to Understanding Complex Systems&lt;/em&gt;&lt;/a&gt; by Sidney Dekker. &lt;/p&gt;
&lt;h2&gt;An overview of &lt;em&gt;Drift into Failure&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;By examining several recent disasters (ranging from the Challenger explosion to the housing market collapse of 2008), Dekker contends that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On the advice of a former colleague, I recently read &lt;a href="http://smile.amazon.com/Drift-into-Failure-Components-Understanding-ebook/dp/B009KOKXKY"&gt;&lt;em&gt;Drift into Failure: From Hunting Broken Components to Understanding Complex Systems&lt;/em&gt;&lt;/a&gt; by Sidney Dekker. &lt;/p&gt;
&lt;h2&gt;An overview of &lt;em&gt;Drift into Failure&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;By examining several recent disasters (ranging from the Challenger explosion to the housing market collapse of 2008), Dekker contends that root cause analysis is an inherently flawed strategy for understanding failures of large complicated systems (e.g. the NASA bureaucracy or Wall Street). Dekker believes that a single faulty component cannot be held to blame for these failures. Competing pressures (e.g. budget, publicity) can allow complicated systems to tolerate increasing levels of risk over time, leading to a slow "drift into failure" where no one component can be held truly responsible.&lt;/p&gt;
&lt;p&gt;Dekker eventually proposes several ways to avoid this drift. He says that "high reliability organizations" tend to exhibit the following 4 characteristics:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Senior management commitment to safety&lt;/li&gt;
&lt;li&gt;Shared care and concern for hazards and a willingness to learn and understand how they impact people&lt;/li&gt;
&lt;li&gt;Realistic and flexible norms and rules about hazards&lt;/li&gt;
&lt;li&gt;Continual reflection on practice through monitoring, analysis, and feedback systems&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The last point is the most nuanced. Since organizations will evolve over time, it is important that they continually reflect on how they are changing to ensure they evolve in the best direction for the long term health of the organization.&lt;/p&gt;
&lt;p&gt;This kind of reflection is &lt;em&gt;hard&lt;/em&gt; for most organizations and Dekker offers some interesting suggestions for how to do it. First, he emphasizes that senior management must support this kind reflection and commitment. He then suggests:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rotating personnel from different places (but similar operations) for shorter periods can in principle be done in a variety of worlds. It represents an important lever for assuring the kind of diversity that can make small steps visible and open for discussion.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;During these discussions, Dekker says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The questions we should reflect on (even if we may not get clear answers) are two-fold: why did this happen, and why are we surprised that it happened? The first question is about the workings of the complex system and its environment. The second is about our (lack of) understanding of those workings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In addition, Dekker recommends that organizations give authority to all levels of an organization. He cites the example of the nuclear aircraft carrier:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Even the lowest ranking individual on the deck of an aircraft carrier has the authority (and in indeed the duty) to suspend immediately any take-off or landing that might pose unnecessary risk.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lastly, he suggests that systems can use this tendency to evolve to push themselves towards safety. Rather than compliance and regulation, he suggests that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;complex systems should have a co-evolver/counter evolver.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is an entity that is aware of the complexity of the organization (and will evolve with it) and strives to push the organization in a different direction than it would locally optimize for. Dekker doesn't mention it, but I think Netflix's &lt;a href="http://techblog.netflix.com/2012/07/chaos-monkey-released-into-wild.html"&gt;Chaos Monkey&lt;/a&gt; is the perfect example of this.&lt;/p&gt;
&lt;h2&gt;A wrap up&lt;/h2&gt;
&lt;p&gt;Overall, the book was fascinating but hard to read. Unfortunately, Dekker uses very complex language that usually muddles his argument rather than refining it. This confusion was exacerbated by the fact that he only starts proposing solutions in the last chapter. I ended up writing this review because I wanted to share the ideas of the book with other people but wasn't convinced they would read through it.&lt;/p&gt;
&lt;h2&gt;Do startups have a moral imperative not to fail?&lt;/h2&gt;
&lt;p&gt;One of the things that really struck me in the book was that it implicitly assumed that these systems had a moral imperative not to fail. For a mine or airline, where human lives are at stake, that case is "easier" to argue; however, I feel like that is not a core tenet of many web startups. In some sense, the motto "move fast break things" seems like a deliberate acknowledgment that there is no moral imperative to avoid failure.&lt;/p&gt;</content><category term="reviews"></category></entry><entry><title>Reading intern resumes</title><link href="https://codearcana.com/posts/2013/09/25/reading-intern-resumes.html" rel="alternate"></link><published>2013-09-25T00:00:00-07:00</published><updated>2013-09-25T00:00:00-07:00</updated><author><name>Alex Reece</name></author><id>tag:codearcana.com,2013-09-25:/posts/2013/09/25/reading-intern-resumes.html</id><summary type="html">&lt;p&gt;Tonight, I sat down and read through every resume in the 2013 SCS senior
resume book. Reading resumes for a company is really interesting, because
I find myself looking at them very differently. As a student, I didn't
really understand what sections of the resume are important. I thought
it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tonight, I sat down and read through every resume in the 2013 SCS senior
resume book. Reading resumes for a company is really interesting, because
I find myself looking at them very differently. As a student, I didn't
really understand what sections of the resume are important. I thought
it would be interesting to give a brief walk through of my resume scan
process&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;I look at the sections of the resume in roughly this order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Graduation year / major.&lt;/em&gt; I want to know if I'm dealing with a
     Sophomore/Junior/Senior so I know how to evaluate the classes
     and work experience. I also glance at the major, because there are
     a few majors that are red flags (no, I will not skip your resume
     if you are in IS. IS actually &lt;em&gt;isn't&lt;/em&gt; a red flag to me, and a single
     red flag is not a veto). &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;I do not care&lt;/em&gt; about your GPA, although I will be concerned if it 
      is below at 3.2.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Courses taken.&lt;/em&gt; I want to know what experience you have and what you find
     interesting (or what you think employers will find interesting).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;I want to see&lt;/em&gt; the courses you've taken that &lt;em&gt;aren't&lt;/em&gt; required or
       were an option for you. In
       particular, I am interested in seeing the 300 and 400 level courses
       you've taken (if you're a systems person, for example, I expect to
       see more than one upper level systems course). While I cannot tell
       how well you did in the courses if you don't tell me (that 
       information would actually be super useful), I hope to get
       an idea of what interests you from your choice in courses. You should
       also be aware that as a CMU graduate, I'm well of the fact that some
       courses are more difficult than others. Did you take Compilers and
       Parallel as a Junior, or are just only now taking Distributed as a
       senior? If you're a sophomore who
       hasn't taken any of these courses yet, I'm interested in seeing which
       core courses you've taken.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Projects.&lt;/em&gt; I want to know what you've done when you had the freedom to 
     choose what to do.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;I want to see&lt;/em&gt; interesting projects you did for fun or as a 
     class final project where you got to choose what to do. &lt;/li&gt;
&lt;li&gt;&lt;em&gt;I don't want to see&lt;/em&gt; projects required for a course where you
     had no influence on the design. I took the same courses at CMU as
     you, I am wholly unimpressed by a "web proxy" project (and am 
     actually concerned if I see that on a senior resume).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;I am worried by&lt;/em&gt; hackathon projects. This is my personal
     opinion, but I'm generally worried by projects that were intended
     to have a flashy demo and weren't designed for longevity. I want
     you to see projects that you're &lt;em&gt;proud&lt;/em&gt; of and am generally
     suspicious that a 2 day project has enough interesting ideas or
     well designed code for this.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;I usually find it hard to discern anything&lt;/em&gt; from research projects. If
     you describe the interesting work the project is doing, it is
     hard to know what &lt;em&gt;you&lt;/em&gt; did. Even if you describe what you did, 
     it is hard to know how much influence you had in the design
     process for the project.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, I've learned enough to identify the people I definitely want to
talk to and the people I definitely don't want to talk to. To try to sort the
people I'm still not sure about, I will look at two more pieces of information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Order of languages on your resume.&lt;/em&gt; If you say you are a systems person but
    you put PHP ahead of C, I'm skeptical.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Other companies.&lt;/em&gt; If I'm otherwise unsure about your resume, but you've had 
    internships at large / good companies, thats a good sign. If you haven't had
    very many / any internships, thats a bad sign. I don't really read what you
    did - I assume you were like me and were involved on a project you didn't
    have much control over that wasn't related to the core business. &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Teaching assistant for 200+ level courses.&lt;/em&gt; It is a good sign if you TA for
    a 200 level course or above (and a great sign if you TA for a 400 level
    course). There are a &lt;em&gt;lot&lt;/em&gt; of 100 level TAs, so it is hard to get anything
    meaningful out of that. Also, which semesters you were a TA can be helpful.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;Note this is the process I use for CMU resumes, where I know the courses intimately.&amp;#160;&lt;a class="footnote-backref" href="#fnref-1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="interviewing"></category><category term="hiring"></category></entry></feed>